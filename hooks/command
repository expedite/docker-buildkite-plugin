#!/bin/bash

set -euo pipefail

if [[ -z "${BUILDKITE_PLUGIN_DOCKER_WORKDIR:-}" ]] ; then
  echo "Must set a workdir"
  exit 1
fi

args=(
  "-it"
  "--rm"
  "--workdir" "${BUILDKITE_PLUGIN_DOCKER_WORKDIR}"
)

# Handle the mount-buildkite-agent option
if [[ "${BUILDKITE_PLUGIN_DOCKER_MOUNT_BUILDKITE_AGENT:-true}" =~ (true|on|1) ]] ; then
  args+=(
    "--env" "BUILDKITE_JOB_ID"
    "--env" "BUILDKITE_BUILD_ID"
    "--env" "BUILDKITE_AGENT_ACCESS_TOKEN"
    "--volume" "$(which buildkite-agent):/usr/bin/buildkite-agent"
  )
fi

# Handle any extra environment variables
while IFS='=' read -r name _ ; do
  if [[ $name =~ ^(BUILDKITE_PLUGIN_DOCKER_ENVIRONMENT_[0-9]+) ]] ; then
    args+=( "--env" "${!name}" )
  fi
done < <(env | sort)

echo "--- Starting ssh agent"
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa

args+=(
  "--volume" "$SSH_AUTH_SOCK:/ssh-agent"
)

echo "--- :docker: Running ${BUILDKITE_COMMAND} in ${BUILDKITE_PLUGIN_DOCKER_IMAGE} with ${args[@]}"
docker run "${args[@]}" "${BUILDKITE_PLUGIN_DOCKER_IMAGE}" bash -c "${BUILDKITE_COMMAND}"
